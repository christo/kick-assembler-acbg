Kick Assembler file
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC)('jmp')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('myIf')
              PsiElement(KickAssemblerTokenType.DOT)('.')
              PsiElement(KickAssemblerTokenType.LABEL)('lbl')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      PsiElement(KickAssemblerTokenType.LABEL_DEF)('myIf:')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerIfElseImpl(IF_ELSE)
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.DIRECTIVE_IF)('if')
        PsiElement(KickAssemblerTokenType.LEFT_PAREN)('(')
        KickAssemblerExprImpl(EXPR)
          KickAssemblerBasicValueImpl(BASIC_VALUE)
            PsiElement(KickAssemblerTokenType.BOOLEAN)('true')
        PsiElement(KickAssemblerTokenType.RIGHT_PAREN)(')')
        KickAssemblerStatementImpl(STATEMENT)
          KickAssemblerBlockImpl(BLOCK)
            PsiElement(KickAssemblerTokenType.LEFT_BRACE)('{')
            KickAssemblerStatementImpl(STATEMENT)
              PsiElement(KickAssemblerTokenType.LABEL_DEF)('lbl:')
            KickAssemblerStatementImpl(STATEMENT)
              KickAssemblerInstructionImpl(INSTRUCTION)
                PsiElement(KickAssemblerTokenType.MNEMONIC)('lda')
                KickAssemblerArgumentImpl(ARGUMENT)
                  PsiElement(KickAssemblerTokenType.HASH)('#')
                  KickAssemblerExprImpl(EXPR)
                    KickAssemblerBasicValueImpl(BASIC_VALUE)
                      PsiElement(KickAssemblerTokenType.NUMBER)('0')
            PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// <-- Jumps here ...')
            PsiElement(KickAssemblerTokenType.RIGHT_BRACE)('}')
        PsiElement(KickAssemblerTokenType.LABEL)('else')
        KickAssemblerStatementImpl(STATEMENT)
          KickAssemblerBlockImpl(BLOCK)
            PsiElement(KickAssemblerTokenType.LEFT_BRACE)('{')
            KickAssemblerStatementImpl(STATEMENT)
              PsiElement(KickAssemblerTokenType.LABEL_DEF)('lbl:')
            KickAssemblerStatementImpl(STATEMENT)
              KickAssemblerInstructionImpl(INSTRUCTION)
                PsiElement(KickAssemblerTokenType.MNEMONIC)('nop')
            PsiElement(KickAssemblerTokenType.RIGHT_BRACE)('}')