Kick Assembler file
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerLabelAssignmentImpl(LABEL_ASSIGNMENT)
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.DIRECTIVE_DEF)('label')
        PsiElement(KickAssemblerTokenType.LABEL)('StaticFrame')
        PsiElement(KickAssemblerTokenType.ASSIGN)('=')
        KickAssemblerExprImpl(EXPR)
          KickAssemblerBasicValueImpl(BASIC_VALUE)
            PsiElement(KickAssemblerTokenType.NUMBER)('$c000')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerMacroDefImpl(MACRO_DEF)
      PsiElement(KickAssemblerTokenType.DOT)('.')
      PsiElement(KickAssemblerTokenType.DIRECTIVE_DEF_MACRO)('macro')
      PsiElement(KickAssemblerTokenType.LABEL)('setEnemyColor')
      PsiElement(KickAssemblerTokenType.LEFT_PAREN)('(')
      KickAssemblerIdentifierListImpl(IDENTIFIER_LIST)
        PsiElement(KickAssemblerTokenType.LABEL)('xx')
        PsiElement(KickAssemblerTokenType.COMMA)(',')
        PsiElement(KickAssemblerTokenType.LABEL)('yy')
      PsiElement(KickAssemblerTokenType.RIGHT_PAREN)(')')
      PsiElement(KickAssemblerTokenType.LEFT_BRACE)('{')
      KickAssemblerStatementImpl(STATEMENT)
        KickAssemblerInstructionImpl(INSTRUCTION)
          PsiElement(KickAssemblerTokenType.MNEMONIC12)('ldx')
          KickAssemblerArgumentImpl(ARGUMENT)
            PsiElement(KickAssemblerTokenType.HASH)('#')
            KickAssemblerExprImpl(EXPR)
              KickAssemblerScopedLabelImpl(SCOPED_LABEL)
                PsiElement(KickAssemblerTokenType.LABEL)('xx')
      KickAssemblerStatementImpl(STATEMENT)
        KickAssemblerIfElseImpl(IF_ELSE)
          PsiElement(KickAssemblerTokenType.DOT)('.')
          PsiElement(KickAssemblerTokenType.DIRECTIVE_IF)('if')
          PsiElement(KickAssemblerTokenType.LEFT_PAREN)('(')
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('yy')
            KickAssemblerInfixOperatorImpl(INFIX_OPERATOR)
              PsiElement(KickAssemblerTokenType.EQUAL)('==')
            KickAssemblerExprImpl(EXPR)
              KickAssemblerBasicValueImpl(BASIC_VALUE)
                PsiElement(KickAssemblerTokenType.NULL)('null')
          PsiElement(KickAssemblerTokenType.RIGHT_PAREN)(')')
          KickAssemblerStatementImpl(STATEMENT)
            KickAssemblerBlockImpl(BLOCK)
              PsiElement(KickAssemblerTokenType.LEFT_BRACE)('{')
              KickAssemblerStatementImpl(STATEMENT)
                KickAssemblerInstructionImpl(INSTRUCTION)
                  PsiElement(KickAssemblerTokenType.MNEMONIC12)('ldy')
                  KickAssemblerArgumentImpl(ARGUMENT)
                    PsiElement(KickAssemblerTokenType.HASH)('#')
                    KickAssemblerExprImpl(EXPR)
                      KickAssemblerScopedLabelImpl(SCOPED_LABEL)
                        PsiElement(KickAssemblerTokenType.LABEL)('xx')
              PsiElement(KickAssemblerTokenType.RIGHT_BRACE)('}')
      PsiElement(KickAssemblerTokenType.RIGHT_BRACE)('}')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerMacroDefImpl(MACRO_DEF)
      PsiElement(KickAssemblerTokenType.DOT)('.')
      PsiElement(KickAssemblerTokenType.DIRECTIVE_DEF_MACRO)('macro')
      PsiElement(KickAssemblerTokenType.LABEL)('LoadIt')
      PsiElement(KickAssemblerTokenType.LEFT_PAREN)('(')
      KickAssemblerIdentifierListImpl(IDENTIFIER_LIST)
        PsiElement(KickAssemblerTokenType.LABEL)('n')
      PsiElement(KickAssemblerTokenType.RIGHT_PAREN)(')')
      PsiElement(KickAssemblerTokenType.LEFT_BRACE)('{')
      KickAssemblerStatementImpl(STATEMENT)
        KickAssemblerInstructionImpl(INSTRUCTION)
          PsiElement(KickAssemblerTokenType.MNEMONIC12)('lda')
          KickAssemblerArgumentImpl(ARGUMENT)
            PsiElement(KickAssemblerTokenType.HASH)('#')
            KickAssemblerExprImpl(EXPR)
              KickAssemblerScopedLabelImpl(SCOPED_LABEL)
                PsiElement(KickAssemblerTokenType.LABEL)('n')
      PsiElement(KickAssemblerTokenType.RIGHT_BRACE)('}')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerMacroDefImpl(MACRO_DEF)
      PsiElement(KickAssemblerTokenType.DOT)('.')
      PsiElement(KickAssemblerTokenType.DIRECTIVE_DEF_MACRO)('macro')
      PsiElement(KickAssemblerTokenType.LABEL)('callMacro')
      PsiElement(KickAssemblerTokenType.LEFT_PAREN)('(')
      KickAssemblerIdentifierListImpl(IDENTIFIER_LIST)
        PsiElement(KickAssemblerTokenType.LABEL)('a')
        PsiElement(KickAssemblerTokenType.COMMA)(',')
        PsiElement(KickAssemblerTokenType.LABEL)('b')
      PsiElement(KickAssemblerTokenType.RIGHT_PAREN)(')')
      PsiElement(KickAssemblerTokenType.LEFT_BRACE)('{')
      KickAssemblerStatementImpl(STATEMENT)
        KickAssemblerIfElseImpl(IF_ELSE)
          PsiElement(KickAssemblerTokenType.DOT)('.')
          PsiElement(KickAssemblerTokenType.DIRECTIVE_IF)('if')
          PsiElement(KickAssemblerTokenType.LEFT_PAREN)('(')
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('a')
          PsiElement(KickAssemblerTokenType.RIGHT_PAREN)(')')
          KickAssemblerStatementImpl(STATEMENT)
            KickAssemblerBlockImpl(BLOCK)
              PsiElement(KickAssemblerTokenType.LEFT_BRACE)('{')
              KickAssemblerStatementImpl(STATEMENT)
                KickAssemblerInstructionImpl(INSTRUCTION)
                  PsiElement(KickAssemblerTokenType.MNEMONIC12)('lda')
                  KickAssemblerArgumentImpl(ARGUMENT)
                    PsiElement(KickAssemblerTokenType.HASH)('#')
                    KickAssemblerExprImpl(EXPR)
                      KickAssemblerBasicValueImpl(BASIC_VALUE)
                        PsiElement(KickAssemblerTokenType.NUMBER)('1')
              PsiElement(KickAssemblerTokenType.RIGHT_BRACE)('}')
      KickAssemblerStatementImpl(STATEMENT)
        KickAssemblerIfElseImpl(IF_ELSE)
          PsiElement(KickAssemblerTokenType.DOT)('.')
          PsiElement(KickAssemblerTokenType.DIRECTIVE_IF)('if')
          PsiElement(KickAssemblerTokenType.LEFT_PAREN)('(')
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('b')
          PsiElement(KickAssemblerTokenType.RIGHT_PAREN)(')')
          KickAssemblerStatementImpl(STATEMENT)
            KickAssemblerBlockImpl(BLOCK)
              PsiElement(KickAssemblerTokenType.LEFT_BRACE)('{')
              KickAssemblerStatementImpl(STATEMENT)
                KickAssemblerInstructionImpl(INSTRUCTION)
                  PsiElement(KickAssemblerTokenType.MNEMONIC12)('ldx')
                  KickAssemblerArgumentImpl(ARGUMENT)
                    PsiElement(KickAssemblerTokenType.HASH)('#')
                    KickAssemblerExprImpl(EXPR)
                      KickAssemblerBasicValueImpl(BASIC_VALUE)
                        PsiElement(KickAssemblerTokenType.NUMBER)('2')
              PsiElement(KickAssemblerTokenType.RIGHT_BRACE)('}')
      PsiElement(KickAssemblerTokenType.RIGHT_BRACE)('}')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC12)('lda')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('StaticFrame')
  PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// macro calls with optional colon prefix')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInvocationImpl(INVOCATION)
        PsiElement(KickAssemblerTokenType.COLON)(':')
        KickAssemblerScopedLabelImpl(SCOPED_LABEL)
          PsiElement(KickAssemblerTokenType.LABEL)('LoadIt')
        PsiElement(KickAssemblerTokenType.LEFT_PAREN)('(')
        KickAssemblerExprImpl(EXPR)
          KickAssemblerBasicValueImpl(BASIC_VALUE)
            PsiElement(KickAssemblerTokenType.NUMBER)('0')
        PsiElement(KickAssemblerTokenType.RIGHT_PAREN)(')')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInvocationImpl(INVOCATION)
        PsiElement(KickAssemblerTokenType.COLON)(':')
        KickAssemblerScopedLabelImpl(SCOPED_LABEL)
          PsiElement(KickAssemblerTokenType.LABEL)('setEnemyColor')
        PsiElement(KickAssemblerTokenType.LEFT_PAREN)('(')
        KickAssemblerExprImpl(EXPR)
          KickAssemblerBasicValueImpl(BASIC_VALUE)
            PsiElement(KickAssemblerTokenType.NUMBER)('2')
        PsiElement(KickAssemblerTokenType.COMMA)(',')
        KickAssemblerExprImpl(EXPR)
          KickAssemblerBasicValueImpl(BASIC_VALUE)
            PsiElement(KickAssemblerTokenType.NULL)('null')
        PsiElement(KickAssemblerTokenType.RIGHT_PAREN)(')')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInvocationImpl(INVOCATION)
        KickAssemblerScopedLabelImpl(SCOPED_LABEL)
          PsiElement(KickAssemblerTokenType.LABEL)('callMacro')
        PsiElement(KickAssemblerTokenType.LEFT_PAREN)('(')
        KickAssemblerExprImpl(EXPR)
          KickAssemblerBasicValueImpl(BASIC_VALUE)
            PsiElement(KickAssemblerTokenType.BOOLEAN)('true')
        PsiElement(KickAssemblerTokenType.COMMA)(',')
        KickAssemblerExprImpl(EXPR)
          KickAssemblerBasicValueImpl(BASIC_VALUE)
            PsiElement(KickAssemblerTokenType.BOOLEAN)('false')
        PsiElement(KickAssemblerTokenType.RIGHT_PAREN)(')')