Kick Assembler file
  PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// example from http://www.theweb.dk/KickAssembler/webhelp/content/ch03s02.html')
  PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// some explicit absolute mode addressing (not the otherwise automatic zeropage conversion)')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC12)('lda')
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.MNEMONIC_EXTENSION)('abs')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerBasicValueImpl(BASIC_VALUE)
              PsiElement(KickAssemblerTokenType.NUMBER)('$0040')
        PsiElement(KickAssemblerTokenType.COMMA)(',')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('x')
  PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// Uses absolute mode')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC12)('lda')
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.MNEMONIC_EXTENSION)('a')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerBasicValueImpl(BASIC_VALUE)
              PsiElement(KickAssemblerTokenType.NUMBER)('$0030')
        PsiElement(KickAssemblerTokenType.COMMA)(',')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('x')
  PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// Same as abs (abbreviation)')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC12)('stx')
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.MNEMONIC_EXTENSION)('zp')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('zpLabel')
        PsiElement(KickAssemblerTokenType.COMMA)(',')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('y')
  PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// Uses zeropage mode')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC12)('stx')
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.MNEMONIC_EXTENSION)('z')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('zpLabel')
        PsiElement(KickAssemblerTokenType.COMMA)(',')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('y')
  PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// Same as zp (abbreviation)')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerLabelAssignmentImpl(LABEL_ASSIGNMENT)
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.DIRECTIVE_DEF)('label')
        PsiElement(KickAssemblerTokenType.LABEL)('zpLabel')
        PsiElement(KickAssemblerTokenType.ASSIGN)('=')
        KickAssemblerExprImpl(EXPR)
          KickAssemblerBasicValueImpl(BASIC_VALUE)
            PsiElement(KickAssemblerTokenType.NUMBER)('$10')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC1)('jmp')
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.MNEMONIC_EXTENSION)('z')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerBasicValueImpl(BASIC_VALUE)
              PsiElement(KickAssemblerTokenType.NUMBER)('$1000')
  PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// Modifies nothing, jmp don't have any zp mode')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC12)('lda')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerInvocationImpl(INVOCATION)
              KickAssemblerScopedLabelImpl(SCOPED_LABEL)
                PsiElement(KickAssemblerTokenType.LABEL)('SomeScope')
                PsiElement(KickAssemblerTokenType.DOT)('.')
                PsiElement(KickAssemblerTokenType.LABEL)('index')
              PsiElement(KickAssemblerTokenType.LEFT_PAREN)('(')
              PsiElement(KickAssemblerTokenType.RIGHT_PAREN)(')')
  PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// deprecated mnemonic extensions')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC12)('lda')
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.MNEMONIC_EXTENSION_DEPRECATED)('zpx')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('table')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC1)('jmp')
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.MNEMONIC_EXTENSION_DEPRECATED)('i')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerBasicValueImpl(BASIC_VALUE)
              PsiElement(KickAssemblerTokenType.NUMBER)('$1000')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerLabelAssignmentImpl(LABEL_ASSIGNMENT)
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.DIRECTIVE_DEF)('label')
        PsiElement(KickAssemblerTokenType.LABEL)('table')
        PsiElement(KickAssemblerTokenType.ASSIGN)('=')
        KickAssemblerExprImpl(EXPR)
          PsiElement(KickAssemblerTokenType.ASTERISK)('*')