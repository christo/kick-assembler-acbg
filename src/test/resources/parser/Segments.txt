Kick Assembler file
  PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// from KickAssembler manual as at v5.16 Chapter 10.3. Segments')
  PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// Define two segments')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerSegmentDirectiveImpl(SEGMENT_DIRECTIVE)
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.DIRECTIVE_SEGMENT_DEF)('segmentdef')
        PsiElement(KickAssemblerTokenType.LABEL)('MySegment1')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerSegmentDirectiveImpl(SEGMENT_DIRECTIVE)
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.DIRECTIVE_SEGMENT_DEF)('segmentdef')
        PsiElement(KickAssemblerTokenType.LABEL)('MySegment2')
        KickAssemblerParameterMapImpl(PARAMETER_MAP)
          PsiElement(KickAssemblerTokenType.LEFT_BRACKET)('[')
          KickAssemblerParameterImpl(PARAMETER)
            PsiElement(KickAssemblerTokenType.LABEL)('start')
            PsiElement(KickAssemblerTokenType.ASSIGN)('=')
            KickAssemblerExprImpl(EXPR)
              KickAssemblerBasicValueImpl(BASIC_VALUE)
                PsiElement(KickAssemblerTokenType.NUMBER)('$1000')
          PsiElement(KickAssemblerTokenType.RIGHT_BRACKET)(']')
  PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// Add code to segment1')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerSegmentDirectiveImpl(SEGMENT_DIRECTIVE)
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.DIRECTIVE_SEGMENT)('segment')
        PsiElement(KickAssemblerTokenType.LABEL)('MySegment1')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerPcAssignmentImpl(PC_ASSIGNMENT)
        PsiElement(KickAssemblerTokenType.ASTERISK)('*')
        PsiElement(KickAssemblerTokenType.ASSIGN)('=')
        KickAssemblerExprImpl(EXPR)
          KickAssemblerBasicValueImpl(BASIC_VALUE)
            PsiElement(KickAssemblerTokenType.NUMBER)('$4000')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC)('ldx')
        KickAssemblerArgumentImpl(ARGUMENT)
          PsiElement(KickAssemblerTokenType.HASH)('#')
          KickAssemblerExprImpl(EXPR)
            KickAssemblerBasicValueImpl(BASIC_VALUE)
              PsiElement(KickAssemblerTokenType.NUMBER)('30')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      PsiElement(KickAssemblerTokenType.LABEL_DEF)('l1:')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC)('inc')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerBasicValueImpl(BASIC_VALUE)
              PsiElement(KickAssemblerTokenType.NUMBER)('$d021')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC)('dex')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC)('bne')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('l1')
  PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// Add code to segment2 (Using default block starting in $1000)')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerSegmentDirectiveImpl(SEGMENT_DIRECTIVE)
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.DIRECTIVE_SEGMENT)('segment')
        PsiElement(KickAssemblerTokenType.LABEL)('MySegment2')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC)('inc')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerBasicValueImpl(BASIC_VALUE)
              PsiElement(KickAssemblerTokenType.NUMBER)('$d021')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC)('jmp')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            PsiElement(KickAssemblerTokenType.ASTERISK)('*')
            KickAssemblerInfixOperatorImpl(INFIX_OPERATOR)
              PsiElement(KickAssemblerTokenType.MINUS)('-')
            KickAssemblerExprImpl(EXPR)
              KickAssemblerBasicValueImpl(BASIC_VALUE)
                PsiElement(KickAssemblerTokenType.NUMBER)('3')
  PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// Switch back to segment1 and add more code.')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerSegmentDirectiveImpl(SEGMENT_DIRECTIVE)
        PsiElement(KickAssemblerTokenType.DOT)('.')
        PsiElement(KickAssemblerTokenType.DIRECTIVE_SEGMENT)('segment')
        PsiElement(KickAssemblerTokenType.LABEL)('MySegment1')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC)('inc')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerBasicValueImpl(BASIC_VALUE)
              PsiElement(KickAssemblerTokenType.NUMBER)('$d020')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC)('jmp')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            PsiElement(KickAssemblerTokenType.ASTERISK)('*')
            KickAssemblerInfixOperatorImpl(INFIX_OPERATOR)
              PsiElement(KickAssemblerTokenType.MINUS)('-')
            KickAssemblerExprImpl(EXPR)
              KickAssemblerBasicValueImpl(BASIC_VALUE)
                PsiElement(KickAssemblerTokenType.NUMBER)('3')