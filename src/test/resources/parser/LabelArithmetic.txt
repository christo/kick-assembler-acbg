Kick Assembler file
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      PsiElement(KickAssemblerTokenType.LABEL_DEF)('set_marker_shape:')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC12)('ldx')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('item_playing')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC12)('lda')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('item_text_offset_lo')
        PsiElement(KickAssemblerTokenType.COMMA)(',')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerScopedLabelImpl(SCOPED_LABEL)
              PsiElement(KickAssemblerTokenType.LABEL)('x')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC12)('sta')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerMultilabelImpl(MULTILABEL)
              PsiElement(KickAssemblerTokenType.BANG)('!')
              PsiElement(KickAssemblerTokenType.LABEL)('addr')
              PsiElement(KickAssemblerTokenType.PLUS)('+')
  KickAssemblerRootImpl(ROOT)
    KickAssemblerStatementImpl(STATEMENT)
      KickAssemblerInstructionImpl(INSTRUCTION)
        PsiElement(KickAssemblerTokenType.MNEMONIC12)('sta')
        KickAssemblerArgumentImpl(ARGUMENT)
          KickAssemblerExprImpl(EXPR)
            KickAssemblerMultilabelImpl(MULTILABEL)
              PsiElement(KickAssemblerTokenType.BANG)('!')
              PsiElement(KickAssemblerTokenType.LABEL)('addr')
              PsiElement(KickAssemblerTokenType.PLUS)('+')
              PsiElement(KickAssemblerTokenType.PLUS)('+')
  PsiErrorElement:<infix operator>, <root>, KickAssemblerTokenType.COMMA, KickAssemblerTokenType.LINE_BREAK, KickAssemblerTokenType.PLUS or KickAssemblerTokenType.QUESTION_MARK expected, got '1'
    PsiElement(KickAssemblerTokenType.NUMBER)('1')
  PsiElement(DUMMY_BLOCK)
    PsiComment(KickAssemblerTokenType.COMMENT_LINE)('// whitespace is significant')
    PsiElement(KickAssemblerTokenType.MNEMONIC12)('lda')
    PsiElement(KickAssemblerTokenType.LABEL)('item_text_offset_hi')
    PsiElement(KickAssemblerTokenType.COMMA)(',')
    PsiElement(KickAssemblerTokenType.LABEL)('x')
    PsiElement(KickAssemblerTokenType.MNEMONIC12)('sta')
    PsiElement(KickAssemblerTokenType.BANG)('!')
    PsiElement(KickAssemblerTokenType.LABEL)('addr')
    PsiElement(KickAssemblerTokenType.PLUS)('+')
    PsiElement(KickAssemblerTokenType.PLUS)('+')
    PsiElement(KickAssemblerTokenType.NUMBER)('2')
  PsiElement(KickAssemblerTokenType.BANG)('!')
  PsiElement(KickAssemblerTokenType.LABEL_DEF)('addr:')
  PsiElement(KickAssemblerTokenType.MNEMONIC12)('sty')
  PsiElement(KickAssemblerTokenType.DOT)('.')
  PsiElement(KickAssemblerTokenType.MNEMONIC_EXTENSION)('abs')
  PsiElement(KickAssemblerTokenType.NUMBER)('$0000')
  PsiElement(KickAssemblerTokenType.MNEMONIC0)('rts')